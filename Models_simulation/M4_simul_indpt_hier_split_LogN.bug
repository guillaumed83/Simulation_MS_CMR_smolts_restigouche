model{

## Hyper priors for hierachical structure
## of trap efficiencies

for (i in 1:5){
	mu_theta[i] ~ dnorm(0,0.01)
	sigma_theta[i] ~ dunif(0,10)
	tau_theta[i] <- pow(sigma_theta[i],-2)
}

mu_split ~ dnorm(0,0.01)
sigma_split ~ dunif(0,10)
tau_split <- pow(sigma_split,-2)


## The first 3 wheels have their own estimate
for (t in 1:Y){
	for (i in 1:3){
	# When I_w == 0, the loop is skipped	
		for (k in 1:I_w[t,i]){
			Nm[t,i] ~ dlnorm(12.57834,2.115109 )#dunif(0,1000000) 
			C[t,i] ~ dbin(theta[t,i],round(Nm[t,i]))
			L_theta[t,i] ~ dnorm(mu_theta[i],tau_theta[i])
			logit(theta[t,i]) <-  L_theta[t,i]
			R[t,i] ~ dbin(theta[t,i],M[t,i])
		}
	}
}

## Total number of smolts
for( t in 1:Y){
	Nm_tot[t] ~ dlnorm(13.44616,1.57619 )#dunif(0,5000000)
}

## Downstream wheels 
## 

for (t in 1:Y){
	# Split between the 2 branches
	L_split[t] ~ dnorm(mu_split,tau_split)
	logit(split[t]) <-  L_split[t]
	
	# When I_w == 0, the loop is skipped	
	for (k in 1:I_w[t,4]){
		C[t,4] ~ dbin(theta[t,4],round(split[t]*Nm_tot[t]))
		L_theta[t,4] ~ dnorm(mu_theta[4],tau_theta[4])
		logit(theta[t,4]) <-  L_theta[t,4]
		R[t,4] ~ dbin(theta[t,4],round(split[t]*M[t,4]))	
	}
	# When I_w == 0, the loop is skipped	
	for (k in 1:I_w[t,5]){
		C[t,5] ~ dbin(theta[t,5],round((1-split[t])*Nm_tot[t]))
		L_theta[t,5] ~ dnorm(mu_theta[5],tau_theta[5])
		logit(theta[t,5]) <-  L_theta[t,5]
		R[t,5] ~ dbin(theta[t,5],round((1-split[t])*M[t,5]))	
	}





	
}






} ## End Model
